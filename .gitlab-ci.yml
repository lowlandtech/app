image: equinorta/dotnet-3.1-sdk-node-12

stages:
  - build
  - version
  - release
  - deploy

variables:
  npm_config_cache: "$CI_PROJECT_DIR/.npm"
  CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - .npm
  - .params
  - cache/Cypress
  - node_modules

building:
  stage: build
  script:
  - echo "=== building:$PROJECT.$LIBRARY ==="
  - npm ci
  - $(npm bin)/ng build --prod
  # - chmod +x ./build.sh
  # - ./build.sh
  artifacts:
    paths:
    - dist/
  only:
  - tags

versioning:
  stage: version
  artifacts:
    paths:
    - .params/
  image: node:12
  script:
  - echo "=== versioning:$PROJECT.$LIBRARY ==="
  - mkdir .params
  - node -p "require('./package.json').version" > .params/version
  - export VERSION=$(cat .params/version)
  only:
  - tags

releasing:
  stage: release
  artifacts:
    paths:
    - .params/
  variables:
    IMAGE: $REGISTRY/$PROJECT/$LIBRARY
  image: docker:latest
  services:
  - docker:dind
  script:
  - echo "=== releasing:$PROJECT.$LIBRARY ==="
  - export VERSION=$(cat .params/version)
  - cd src
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $REGISTRY
  - docker build -t $IMAGE:$VERSION -t $IMAGE:latest .
  - docker push $IMAGE:latest
  - docker push $IMAGE:$VERSION
  only:
  - tags

deploying:
  stage: deploy
  variables:
    IMAGE: $REGISTRY/$PROJECT/$LIBRARY
    CONTAINER: $PROJECT.$LIBRARY
  image: docker:dind
  services:
  - docker:dind
  script:
  - echo "=== deploying:$PROJECT.$LIBRARY ==="
  # install the command line tool ssh-client, to manage private keys
  - apk update && apk add openssh-client
  # activate the ssh-agent
  - eval $(ssh-agent -s)
  # load the private key, which is accesible as a environment variable
  - echo "$SSH_KEY" | ssh-add -
  - mkdir -p ~/.ssh
  # ensure that ssh will trust a new host, instead of asking
  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  - ssh -o "StrictHostKeyChecking no" $USER@$PROJECT.$EXT "cd $FOLDER && docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com && docker-compose up -d && exit"
  - rm -r ~/.ssh
  only:
  - tags
